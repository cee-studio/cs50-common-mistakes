==20490== Memcheck, a memory error detector
==20490== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20490== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==20490== Command: b small lalaland.txt
==20490== 
==20490== Conditional jump or move depends on uninitialised value(s)
==20490==    at 0x401333: load (dictionary.c:72)
==20490==    by 0x4016B4: main (speller.c:40)
==20490== 
==20490== Conditional jump or move depends on uninitialised value(s)
==20490==    at 0x4014D0: check (dictionary.c:114)
==20490==    by 0x4019D9: main (speller.c:112)
==20490== 
==20490== Conditional jump or move depends on uninitialised value(s)
==20490==    at 0x401597: destroy (dictionary.c:149)
==20490==    by 0x401550: unload (dictionary.c:137)
==20490==    by 0x401B59: main (speller.c:152)
==20490== 
==20490== Conditional jump or move depends on uninitialised value(s)
==20490==    at 0x401597: destroy (dictionary.c:149)
==20490==    by 0x4015AE: destroy (dictionary.c:151)
==20490==    by 0x401550: unload (dictionary.c:137)
==20490==    by 0x401B59: main (speller.c:152)
==20490== 
==20490== Conditional jump or move depends on uninitialised value(s)
==20490==    at 0x401597: destroy (dictionary.c:149)
==20490==    by 0x4015AE: destroy (dictionary.c:151)
==20490==    by 0x4015AE: destroy (dictionary.c:151)
==20490==    by 0x401550: unload (dictionary.c:137)
==20490==    by 0x401B59: main (speller.c:152)
==20490== 
==20490== Conditional jump or move depends on uninitialised value(s)
==20490==    at 0x401597: destroy (dictionary.c:149)
==20490==    by 0x4015AE: destroy (dictionary.c:151)
==20490==    by 0x4015AE: destroy (dictionary.c:151)
==20490==    by 0x4015AE: destroy (dictionary.c:151)
==20490==    by 0x401550: unload (dictionary.c:137)
==20490==    by 0x401B59: main (speller.c:152)
==20490== 
==20490== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==20490== 
==20490== Process terminating with default action of signal 11 (SIGSEGV)
==20490==  Access not within mapped region at address 0x1FFE801FF8
==20490== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==20490==    at 0x401568: destroy (dictionary.c:143)
==20490==  If you believe this happened as a result of a stack
==20490==  overflow in your program's main thread (unlikely but
==20490==  possible), you can try to increase the size of the
==20490==  main thread stack using the --main-stacksize= flag.
==20490==  The main thread stack size used in this run was 8388608.
==20490== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==20490== 
==20490== Process terminating with default action of signal 11 (SIGSEGV)
==20490==  Access not within mapped region at address 0x1FFE801FD8
==20490== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==20490==    at 0x482B110: _vgnU_freeres (vg_preloaded.c:59)
==20490==  If you believe this happened as a result of a stack
==20490==  overflow in your program's main thread (unlikely but
==20490==  possible), you can try to increase the size of the
==20490==  main thread stack using the --main-stacksize= flag.
==20490==  The main thread stack size used in this run was 8388608.
==20490== 
==20490== HEAP SUMMARY:
==20490==     in use at exit: 2,592 bytes in 12 blocks
==20490==   total heap usage: 16 allocs, 4 frees, 11,888 bytes allocated
==20490== 
==20490== LEAK SUMMARY:
==20490==    definitely lost: 0 bytes in 0 blocks
==20490==    indirectly lost: 0 bytes in 0 blocks
==20490==      possibly lost: 0 bytes in 0 blocks
==20490==    still reachable: 2,592 bytes in 12 blocks
==20490==         suppressed: 0 bytes in 0 blocks
==20490== Rerun with --leak-check=full to see details of leaked memory
==20490== 
==20490== For counts of detected and suppressed errors, rerun with: -v
==20490== Use --track-origins=yes to see where uninitialised values come from
==20490== ERROR SUMMARY: 366260 errors from 6 contexts (suppressed: 0 from 0)
