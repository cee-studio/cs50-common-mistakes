==20160== Memcheck, a memory error detector
==20160== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20160== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==20160== Command: ./b small lalaland.txt
==20160== 
==20160== Conditional jump or move depends on uninitialised value(s)
==20160==    at 0x487F2FF: tolower (ctype.c:46)
==20160==    by 0x401410: check (dictionary.c:97)
==20160==    by 0x401929: main (speller.c:113)
==20160== 
==20160== Use of uninitialised value of size 8
==20160==    at 0x487F313: tolower (ctype.c:46)
==20160==    by 0x487F313: tolower (ctype.c:44)
==20160==    by 0x401410: check (dictionary.c:97)
==20160==    by 0x401929: main (speller.c:113)
==20160== 
==20160== Invalid read of size 1
==20160==    at 0x48395FE: strcasecmp (vg_replace_strmem.c:693)
==20160==    by 0x401477: check (dictionary.c:108)
==20160==    by 0x401929: main (speller.c:113)
==20160==  Address 0x4a142f0 is 0 bytes inside a block of size 56 free'd
==20160==    at 0x48369AB: free (vg_replace_malloc.c:530)
==20160==    by 0x401314: load (dictionary.c:64)
==20160==    by 0x401604: main (speller.c:40)
==20160==  Block was alloc'd at
==20160==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==20160==    by 0x40129E: load (dictionary.c:47)
==20160==    by 0x401604: main (speller.c:40)
==20160== 
==20160== Invalid read of size 8
==20160==    at 0x40148E: check (dictionary.c:112)
==20160==    by 0x401929: main (speller.c:113)
==20160==  Address 0x4a14320 is 48 bytes inside a block of size 56 free'd
==20160==    at 0x48369AB: free (vg_replace_malloc.c:530)
==20160==    by 0x401314: load (dictionary.c:64)
==20160==    by 0x401604: main (speller.c:40)
==20160==  Block was alloc'd at
==20160==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==20160==    by 0x40129E: load (dictionary.c:47)
==20160==    by 0x401604: main (speller.c:40)
==20160== 
==20160== Invalid read of size 8
==20160==    at 0x4014F3: unload (dictionary.c:127)
==20160==    by 0x401AA9: main (speller.c:153)
==20160==  Address 0x4a14320 is 48 bytes inside a block of size 56 free'd
==20160==    at 0x48369AB: free (vg_replace_malloc.c:530)
==20160==    by 0x401314: load (dictionary.c:64)
==20160==    by 0x401604: main (speller.c:40)
==20160==  Block was alloc'd at
==20160==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==20160==    by 0x40129E: load (dictionary.c:47)
==20160==    by 0x401604: main (speller.c:40)
==20160== 
==20160== Invalid free() / delete / delete[] / realloc()
==20160==    at 0x48369AB: free (vg_replace_malloc.c:530)
==20160==    by 0x401506: unload (dictionary.c:128)
==20160==    by 0x401AA9: main (speller.c:153)
==20160==  Address 0x4a142f0 is 0 bytes inside a block of size 56 free'd
==20160==    at 0x48369AB: free (vg_replace_malloc.c:530)
==20160==    by 0x401314: load (dictionary.c:64)
==20160==    by 0x401604: main (speller.c:40)
==20160==  Block was alloc'd at
==20160==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==20160==    by 0x40129E: load (dictionary.c:47)
==20160==    by 0x401604: main (speller.c:40)
==20160== 
==20160== 
==20160== HEAP SUMMARY:
==20160==     in use at exit: 1,811,112 bytes in 35,512 blocks
==20160==   total heap usage: 35,518 allocs, 8 frees, 1,820,520 bytes allocated
==20160== 
==20160== LEAK SUMMARY:
==20160==    definitely lost: 1,811,112 bytes in 35,512 blocks
==20160==    indirectly lost: 0 bytes in 0 blocks
==20160==      possibly lost: 0 bytes in 0 blocks
==20160==    still reachable: 0 bytes in 0 blocks
==20160==         suppressed: 0 bytes in 0 blocks
==20160== Rerun with --leak-check=full to see details of leaked memory
==20160== 
==20160== For counts of detected and suppressed errors, rerun with: -v
==20160== Use --track-origins=yes to see where uninitialised values come from
==20160== ERROR SUMMARY: 533959 errors from 6 contexts (suppressed: 0 from 0)
